{"version":3,"sources":["logo.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","code","message","video","handleChange","bind","handleSubmit","event","this","setState","target","value","result","validateCode","console","log","preventDefault","view","alertMessage","downloadVideo","downloadForm","className","role","src","logo","alt","onSubmit","type","id","aria-describedby","placeholder","onChange","videos","getVideos","_","find","codes","name","class","href","url","download","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,kC,iQC+I5BC,E,kDAzIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,GACTC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,yDAYNE,GACXC,KAAKC,SAAS,CAACR,KAAMM,EAAMG,OAAOC,U,mCAGvBJ,GACX,IAAIK,EAASJ,KAAKK,aAAaL,KAAKR,MAAMC,MACrCW,GAGHJ,KAAKC,SAAS,CAACN,MAAOS,EAAQV,QAAS,KACvCY,QAAQC,IAAI,cAAeH,IAH3BJ,KAAKC,SAAS,CAACN,MAAO,GAAID,QAAS,wCAKrCK,EAAMS,mB,+BAIN,IAAIC,EAOAC,EASJ,OAdED,EADET,KAAKR,MAAMG,MACNK,KAAKW,gBAELX,KAAKY,eAIVZ,KAAKR,MAAME,UACbgB,EACE,yBAAKG,UAAU,+BAA+BC,KAAK,SACjD,iDADF,IAC6Bd,KAAKR,MAAME,UAM1C,yBAAKmB,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKE,IAAKC,IAAMH,UAAU,WAAWI,IAAI,SACzC,oDAGCR,EACAC,M,qCAOP,OACE,0BAAMQ,SAAUlB,KAAKF,cACnB,yBAAKe,UAAU,cACb,2BACEM,KAAK,OACLN,UAAU,eACVO,GAAG,OACHC,mBAAiB,2BACjBC,YAAY,SACZnB,MAAOH,KAAKR,MAAMC,KAClB8B,SAAUvB,KAAKJ,eAEjB,2BAAOwB,GAAG,WAAWP,UAAU,wBAA/B,qDAEF,4BAAQM,KAAK,SAASN,UAAU,mBAAhC,e,mCAKOpB,GACX,IAAI+B,EAASxB,KAAKyB,YAClB,OAAOC,IAAEC,KAAKH,EAAQ,CAAEI,MAAO,CAAEnC,O,sCAIjC,OACE,6BACE,yCACUO,KAAKR,MAAMG,MAAMkC,MAE3B,6BACE,uBAAGC,MAAM,kBAAkBC,KAAM/B,KAAKR,MAAMG,MAAMqC,IAAKlB,KAAK,SAASmB,UAAQ,GAA7E,oB,kCAON,MAAO,CACL,CACE,KAAQ,UACR,IAAO,+DACP,MAAS,CACP,WAGJ,CACE,KAAQ,uBACR,IAAO,6EACP,MAAS,CACP,WAGJ,CACE,KAAQ,gBACR,IAAO,sEACP,MAAS,CACP,WAGJ,CACE,KAAQ,mBACR,IAAO,yEACP,MAAS,CACP,WAGJ,CACE,KAAQ,cACR,IAAO,oEACP,MAAS,CACP,gB,GAnIQC,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6f00e7eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2c915f61.jpg\";","import React, { Component } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n      message: '',\n      video: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({code: event.target.value});\n  }\n\n  handleSubmit(event) {\n    let result = this.validateCode(this.state.code);\n    if (!result) {\n      this.setState({video: '', message: 'Code not found, please enter again.'});\n    } else {\n      this.setState({video: result, message: ''});\n      console.log('Video found', result);\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    let view;\n    if (this.state.video) {\n      view = this.downloadVideo();\n    } else {\n      view = this.downloadForm();\n    }\n\n    let alertMessage;\n    if (this.state.message) {\n      alertMessage = (\n        <div className=\"App-alert alert alert-danger\" role=\"alert\">\n          <b>Glitter Explosion!</b> {this.state.message}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            BODY MAGICK BURLESQUE\n          </p>\n          {view}\n          {alertMessage}\n        </header>\n      </div>\n    );\n  }\n\n  downloadForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"code\"\n            className=\"form-control\"\n            id=\"code\"\n            aria-describedby=\"Enter your download code\"\n            placeholder=\"wtqj5r\"\n            value={this.state.code}\n            onChange={this.handleChange}\n            />\n          <small id=\"codeHelp\" className=\"form-text text-muted\">Enter your download code to retrieve your video.</small>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Continue</button>\n      </form>\n    )\n  }\n\n  validateCode(code) {\n    let videos = this.getVideos();\n    return _.find(videos, { codes: [ code ]});\n  }\n\n  downloadVideo() {\n    return (\n      <div>\n        <label>\n          Video: {this.state.video.name}\n        </label>\n        <div>\n          <a class=\"btn btn-primary\" href={this.state.video.url} role=\"button\" download>Download It!</a>\n        </div>\n      </div>\n    );\n  }\n\n  getVideos() {\n    return [\n      {\n        \"name\": \"Warm Up\",\n        \"url\": \"https://s3-us-west-2.amazonaws.com/showgirltemple/warmup.mp4\",\n        \"codes\": [\n          'xe3tph'\n        ]\n      },\n      {\n        \"name\": \"Bump'N'Grind Workout\",\n        \"url\": \"https://s3-us-west-2.amazonaws.com/showgirltemple/bump-n-grind-workout.mp4\",\n        \"codes\": [\n          'enf6b7'\n        ]\n      },\n      {\n        \"name\": \"Final Stretch\",\n        \"url\": \"https://s3-us-west-2.amazonaws.com/showgirltemple/final-stretch.mp4\",\n        \"codes\": [\n          'tehv2u'\n        ]\n      },\n      {\n        \"name\": \"Burlesque Basics\",\n        \"url\": \"https://s3-us-west-2.amazonaws.com/showgirltemple/burlesque-basics.mp4\",\n        \"codes\": [\n          '4frz7k'\n        ]\n      },\n      {\n        \"name\": \"Fantabulous\",\n        \"url\": \"https://s3-us-west-2.amazonaws.com/showgirltemple/fantabulous.mp4\",\n        \"codes\": [\n          'atyjf2'\n        ]\n      }\n    ];\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}